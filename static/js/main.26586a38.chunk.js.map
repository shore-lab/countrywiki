{"version":3,"sources":["reducers/country.js","reducers/index.js","actions/constants.js","store.js","components/home/Home.js","components/layouts/navbar/Navbar.js","components/layouts/footer/Footer.js","actions/country.js","components/layouts/spinner/Spinner.js","components/country/CountryList.js","components/country/Country.js","App.js","index.js","assets/images/logo.png"],"names":["defaultState","countryList","error","isLoading","country","currentPage","isListFetched","combineReducers","state","action","type","payload","middleWears","thunk","store","createStore","combinReducer","composeWithDevTools","applyMiddleware","Home","className","src","require","alt","connect","withRouter","history","useState","isOpen","toggleMenu","navigate","e","href","preventDefault","push","Navbar","color","light","expand","id","NavbarBrand","onClick","NavbarToggler","prevState","Collapse","navbar","Nav","NavItem","NavLink","Footer","clearCountry","dispatch","Spinner","height","width","timeout","mapDispatchToProps","getCountries","a","axios","get","result","data","console","log","response","status","message","toString","changePageNum","page","useEffect","columns","Header","accessor","d","languages","join","Cell","props","to","value","onPageChange","getCountryByCode","code","pathname","location","arr","split","trim","name","native","phone","continent","capital","currency","emoji","text","App","Store","exact","path","component","CountryList","Country","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.26586a38.chunk.js","sourcesContent":["import {\r\n  GET_COUNTRIES,\r\n  GET_COUNTRIES_ERROR,\r\n  GET_COUNTRY_BY_CODE,\r\n  CLEAR_COUNTRY,\r\n  SET_CURRENT_PAGE\r\n} from \"../actions/constants\";\r\n\r\nconst defaultState = {\r\n  countryList: [],\r\n  error: {},\r\n  isLoading: true,\r\n  country: {},\r\n  currentPage: 0,\r\n  isListFetched: false\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_COUNTRIES:\r\n      return {\r\n        ...state,\r\n        countryList: payload,\r\n        isLoading: false,\r\n        isListFetched: true\r\n      };\r\n    case GET_COUNTRY_BY_CODE:\r\n      return {\r\n        ...state,\r\n        country: payload,\r\n        isLoading: false\r\n      };\r\n    case CLEAR_COUNTRY:\r\n      return { ...state, country: {}, isLoading: true };\r\n    case GET_COUNTRIES_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        isLoading: false,\r\n        isListFetched: true\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return { ...state, currentPage: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport country from \"./country\";\r\n\r\nexport default combineReducers({ country });\r\n","export const GET_COUNTRIES = \"GET_COUNTRIES\";\r\nexport const GET_COUNTRY_BY_CODE = \"GET_COUNTRY_BY_CODE\";\r\nexport const GET_COUNTRIES_ERROR = \"GET_COUNTRIES_ERROR\";\r\nexport const CLEAR_COUNTRY = \"CLEAR_COUNTRY\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport combinReducer from \"./reducers\";\r\nconst initialStates = {};\r\nconst middleWears = [thunk];\r\n\r\nconst store = createStore(\r\n  combinReducer,\r\n  initialStates,\r\n  composeWithDevTools(applyMiddleware(...middleWears))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"./home.scss\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"inner\">\r\n        <div className=\"home-logo\">\r\n          <img src={require(\"../../assets/images/logo.png\")} alt=\"logo\" />\r\n        </div>\r\n        <h1 className=\"welcome-title\">Welcome to CountryWiki</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\";\r\n\r\nimport \"./navbar.scss\";\r\n\r\nconst NavBar = ({ history }) => {\r\n  const [isOpen, toggleMenu] = useState(false);\r\n\r\n  const toggle = () => {\r\n    toggleMenu(prevState => !prevState);\r\n  };\r\n\r\n  const navigate = (e, href) => {\r\n    e.preventDefault();\r\n    history.push(href);\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      color=\"light\"\r\n      light\r\n      expand=\"md\"\r\n      className=\"navbar navbar-expand-lg navbar-dark nav-fill bg-dark\"\r\n      id=\"mainNav\"\r\n    >\r\n      <NavbarBrand\r\n        href=\"#\"\r\n        className=\"navbar-brand\"\r\n        onClick={e => navigate(e, \"/\")}\r\n      >\r\n        {\" \"}<img\r\n          className=\"nav-logo\"\r\n          src={require(\"../../../assets/images/logo.png\")}\r\n          alt=\"logo\"\r\n        />\r\n        CountryWiki\r\n      </NavbarBrand>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink href=\"#\" onClick={e => navigate(e, \"/\")}>\r\n              Home\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"#\" onClick={e => navigate(e, \"/countries\")}>\r\n              Countries\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar));\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer id=\"sticky-footer\" className=\"py-4 bg-dark text-white-50\">\r\n      <div className=\"container text-center\">\r\n        <small>Copyright &copy; CountryWiki</small>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import {\r\n  GET_COUNTRIES,\r\n  GET_COUNTRIES_ERROR,\r\n  GET_COUNTRY_BY_CODE,\r\n  CLEAR_COUNTRY,\r\n  SET_CURRENT_PAGE\r\n} from \"./constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getCountries = () => async dispatch => {\r\n  try {\r\n    const result = await axios.get(\r\n      \"https://countriesnode.herokuapp.com/v1/countries\"\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_COUNTRIES,\r\n      payload: result.data\r\n    });\r\n\r\n    dispatch(clearCountry());\r\n  } catch (err) {\r\n    console.log(err);\r\n    if (err.response) {\r\n      dispatch({\r\n        type: GET_COUNTRIES_ERROR,\r\n        payload: { status: err.response.status, message: err.response.message }\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_COUNTRIES_ERROR,\r\n        payload: { status: 400, message: err.toString() }\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const getCountryByCode = code => async dispatch => {\r\n  try {\r\n    const result = await axios.get(\r\n      `https://countriesnode.herokuapp.com/v1/countries/${code}`\r\n    );\r\n    dispatch({\r\n      type: GET_COUNTRY_BY_CODE,\r\n      payload: result.data\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    if (err.response) {\r\n      dispatch({\r\n        type: GET_COUNTRIES_ERROR,\r\n        payload: { status: err.response.status, message: err.response.message }\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_COUNTRIES_ERROR,\r\n        payload: { status: 400, message: err.toString() }\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const changePageNum = page => dispatch => {\r\n  dispatch({\r\n    type: SET_CURRENT_PAGE,\r\n    payload: page\r\n  });\r\n};\r\n\r\nexport const clearCountry = () => dispatch => {\r\n  dispatch({\r\n    type: CLEAR_COUNTRY,\r\n    payload: {}\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"./spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner-wrapper\">\r\n      <div className=\"inner\">\r\n        <Loader\r\n          type=\"Grid\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={-1}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCountries, changePageNum } from \"../../actions/country\";\r\nimport ReactTable from \"react-table\";\r\nimport Spinner from \"../layouts/spinner/Spinner\";\r\nimport \"react-table/react-table.css\";\r\nimport \"./country.scss\";\r\n\r\nconst CountryList = ({\r\n  getCountries,\r\n  country: { isLoading, countryList, currentPage, isListFetched },\r\n  changePageNum\r\n}) => {\r\n  useEffect(\r\n    () => {\r\n      if (!isListFetched) {\r\n        getCountries();\r\n      }\r\n    },\r\n    [getCountries, isLoading, isListFetched]\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Country\",\r\n      accessor: \"name\" // String-based value accessors!\r\n    },\r\n    {\r\n      Header: \"Continent\",\r\n      accessor: \"continent\"\r\n    },\r\n    {\r\n      Header: \"Native\",\r\n      accessor: \"native\"\r\n    },\r\n    {\r\n      id: \"languages\", // Required because our accessor is not a string\r\n      Header: \"Languages\", // Custom header components!\r\n      accessor: d => d.languages.join(\", \")\r\n    },\r\n    {\r\n      Header: \"Action\",\r\n      accessor: \"code\",\r\n      Cell: props =>\r\n        <span className=\"number\">\r\n          <Link to={`/countries/${props.value}`} className=\"btn btn-light\">\r\n            View\r\n          </Link>\r\n        </span>\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isListFetched\r\n        ? <Spinner />\r\n        : <div className=\"country-list\">\r\n            <div className=\"page-title-wrapper\">\r\n              <h3 className=\"page-title text-info\">Countries of the World</h3>\r\n            </div>\r\n            <div className=\"country-list-table-wrapper\">\r\n              <ReactTable\r\n                data={countryList}\r\n                columns={columns}\r\n                page={currentPage}\r\n                onPageChange={page => changePageNum(page)}\r\n              />\r\n            </div>\r\n          </div>}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  country: state.country\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getCountries,\r\n  changePageNum\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryList);\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getCountryByCode, clearCountry } from \"../../actions/country\";\r\nimport Spinner from \"../layouts/spinner/Spinner\";\r\nimport { Emojione } from \"react-emoji-render\";\r\nimport \"./country.scss\";\r\n\r\nconst Country = ({\r\n  location: { pathname },\r\n  getCountryByCode,\r\n  country: { isLoading, country },\r\n  history,\r\n  clearCountry\r\n}) => {\r\n  useEffect(\r\n    () => {\r\n      const arr = pathname.split(\"/\");\r\n      if (arr[2]) {\r\n        getCountryByCode(arr[2].trim());\r\n      }\r\n    },\r\n    [getCountryByCode, pathname]\r\n  );\r\n\r\n  const {\r\n    name,\r\n    native,\r\n    phone,\r\n    continent,\r\n    capital,\r\n    currency,\r\n    emoji,\r\n    languages\r\n  } = country;\r\n\r\n  return (\r\n    <Fragment>\r\n      {isLoading\r\n        ? <Spinner />\r\n        : !country || !country.name\r\n          ? <h2>Not Found</h2>\r\n          : <section className=\"country-section\">\r\n              <div className=\"page-title-wrapper\">\r\n                <h3 className=\"page-title text-info\">\r\n                  {name}\r\n                </h3>\r\n              </div>\r\n              <div className=\"country-detail-wrapper\">\r\n                <div className=\"inner-wrapper\">\r\n                  <div className=\"single-row\">\r\n                    <div className=\"content-column label-column\">Name</div>\r\n                    <div className=\"content-column value-column\">\r\n                      {name}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-row\">\r\n                    <div className=\"content-column label-column\">Continent</div>\r\n                    <div className=\"content-column value-column\">\r\n                      {continent}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-row\">\r\n                    <div className=\"content-column label-column\">Capital</div>\r\n                    <div className=\"content-column value-column\">\r\n                      {capital}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-row\">\r\n                    <div className=\"content-column label-column\">Native</div>\r\n                    <div className=\"content-column value-column\">\r\n                      {native}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-row\">\r\n                    <div className=\"content-column label-column\">Languages</div>\r\n                    <div className=\"content-column value-column\">\r\n                      {languages.join(\", \")}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-row\">\r\n                    <div className=\"content-column label-column\">Currency</div>\r\n                    <div className=\"content-column value-column\">\r\n                      {currency}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-row\">\r\n                    <div className=\"content-column label-column\">Phone</div>\r\n                    <div className=\"content-column value-column\">\r\n                      {phone}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"single-row\">\r\n                    <div className=\"content-column label-column\">Flag</div>\r\n                    <div className=\"content-column value-column\">\r\n                      <Emojione text={emoji} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"footer\">\r\n                <button\r\n                  className=\"btn btn-info\"\r\n                  onClick={e => {\r\n                    //clear previously selected country\r\n                    clearCountry();\r\n                    history.push(\"/countries\");\r\n                  }}\r\n                >\r\n                  Go Back\r\n                </button>\r\n              </div>\r\n            </section>}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  country: state.country\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getCountryByCode,\r\n  clearCountry\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(\r\n  withRouter(Country)\r\n);\r\n","import React from \"react\";\nimport Store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./components/home/Home\";\nimport Navbar from \"./components/layouts/navbar/Navbar\";\nimport Footer from \"./components/layouts/footer/Footer\";\nimport CountryList from \"./components/country/CountryList\";\nimport Country from \"./components/country/Country\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Provider store={Store}>\n      <Router>\n        <Navbar />\n        <section className=\"container section-container \">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/countries\" component={CountryList} />\n            <Route exact path=\"/countries/:code\" component={Country} />\n          </Switch>\n        </section>\n      </Router>\n      <Footer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/logo.ebad1aad.png\";"],"sourceRoot":""}